/*
 * Rating Service
 *
 * Optional multiline or single-line description in [CommonMark](http://commonmark.org/help/) or HTML.
 *
 * API version: 0.0.0
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package endpoints

import (
	"context"
	"errors"

	"github.com/nfk93/rating-service/generated/api"
	"github.com/nfk93/rating-service/internal/user"
)

// ApiService is a service that implements the logic for the ApiServicer
// This service should implement the business logic for every endpoint for the DefaultApi API.
// Include any external packages or services that will be required by this service.
type ApiService struct {
	userService *user.UserService
}

// NewApiService creates a default api service
func NewApiService(userService *user.UserService) api.DefaultApiServicer {
	return &ApiService{
		userService: userService,
	}
}

// UsersGet -
func (s *ApiService) UsersGet(ctx context.Context) (api.ImplResponse, error) {
	users, err := s.userService.GetUsers(ctx)
	if err != nil {
		return api.Response(500, nil), errors.New("unexpected error when fetching users")
	}

	return api.Response(200, mapUsers(users)), nil
}

// UsersPost -
func (s *ApiService) UsersUsernamePost(ctx context.Context, username string) (api.ImplResponse, error) {
	id, err := s.userService.CreateUser(ctx, username)
	if err != nil {
		return api.Response(500, nil), errors.New("unexpected error when adding user")
	}

	return api.Response(201, id), nil
}
